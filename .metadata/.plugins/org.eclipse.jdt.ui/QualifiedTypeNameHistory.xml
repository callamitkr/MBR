<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="javax.validation.constraints.NotEmpty"/>
<fullyQualifiedTypeName name="org.springframework.validation.annotation.Validated"/>
<fullyQualifiedTypeName name="com.sun.istack.NotNull"/>
<fullyQualifiedTypeName name="org.hibernate.annotations.NotFound"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.oauth2.client.EnableOAuth2Sso"/>
<fullyQualifiedTypeName name="com.capgemini.mbrt.service.ReportService"/>
<fullyQualifiedTypeName name="com.capgemini.mbrt.repository.ReportRepository"/>
<fullyQualifiedTypeName name="com.capgemini.mbrt.model.Report"/>
<fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="org.springframework.mock.web.MockHttpServletRequest"/>
<fullyQualifiedTypeName name="org.junit.Rule"/>
<fullyQualifiedTypeName name="org.mockito.junit.MockitoRule"/>
<fullyQualifiedTypeName name="org.mockito.junit.MockitoJUnit"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.concurrent.ConcurrentHashMap"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
</qualifiedTypeNameHistroy>
